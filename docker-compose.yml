version: '3.7'
services:
    nginx:
        image: nginx:1.17.9
        container_name: docker-test-nginx
        volumes:
            - ./:/var/www/app
            - .Docker/Nginx/default.conf:/etc/nginx/conf.d/default.conf
            - .Docker/Nginx/default.conf:/etc/nginx/sites-enabled/default
        ports:
            # host:container
            - 8080:80
        # "depends_on" - prevents container to start before other container, on
        # which it depends
        depends_on:
            - php-app
        networks:
            - docker-test

    php-app:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: docker-test-phpapp
        volumes:
            - ./:/var/www/app
        networks:
            - docker-test

    database:
        image: mariadb:10.5.2
        container_name: docker-test-mariadb
        environment:
            - MYSQL_DATABASE=test
            - MYSQL_USER=test_user
            - MYSQL_PASSWORD=test_user
            - MYSQL_ROOT_PASSWORD=root
        volumes:
            # This will write the mysql data into the project folder and persist
            # it there. It will survive the container reboots this way. But:
            # This also causes the docker build to fail because it cannot access
            # the file.
            # - .Docker/MariaDb/data/mysql:/var/lib/mysql
            - .Docker/MariaDb/initData.sql:/docker-entrypoint-initdb.d/data.sql
        networks:
            - docker-test

    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        container_name: docker-test-phpmyadmin
        volumes:
            - .Docker/PhpMyadmin/config.user.inc.php:/etc/phpmyadmin/config.user.inc.php
        ports:
            - 8081:80
        depends_on:
            - database
        environment:
            PMA_HOST: database
        networks:
            - docker-test
networks:
    docker-test:
        external: true

# To build and run:
# docker network create docker-test
# docker-compose build --no-cache
# docker-compose up

# To log into the php-app:
# docker exec -it docker-test-phpapp bash

# Nginx+php via socket:
# https://medium.com/@shrikeh/setting-up-nginx-and-php-fpm-in-docker-with-unix-sockets-6fdfbdc19f91
